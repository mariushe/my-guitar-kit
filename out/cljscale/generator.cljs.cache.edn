;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name cljscale.generator, :imports nil, :requires {t cljscale.theory, cljscale.theory cljscale.theory}, :uses nil, :defs {create-note {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([note]))}, :name cljscale.generator/create-note, :variadic false, :file "src/cljscale/generator.cljs", :end-column 18, :method-params ([note]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([note]))}, create-scale-generator {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 13, :column 7, :end-line 13, :end-column 29, :arglists (quote ([root]))}, :name cljscale.generator/create-scale-generator, :variadic false, :file "src/cljscale/generator.cljs", :end-column 29, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, mark-if-in-scale {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 19, :column 7, :end-line 19, :end-column 23, :arglists (quote ([note scale]))}, :name cljscale.generator/mark-if-in-scale, :variadic false, :file "src/cljscale/generator.cljs", :end-column 23, :method-params ([note scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([note scale]))}, mark-if-root {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 26, :column 7, :end-line 26, :end-column 19, :arglists (quote ([note root]))}, :name cljscale.generator/mark-if-root, :variadic false, :file "src/cljscale/generator.cljs", :end-column 19, :method-params ([note root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([note root]))}, add-scale {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([fretboard scale-name root]))}, :name cljscale.generator/add-scale, :variadic false, :file "src/cljscale/generator.cljs", :end-column 16, :method-params ([fretboard scale-name root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([fretboard scale-name root]))}, create-fretboard {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 43, :column 7, :end-line 43, :end-column 23, :arglists (quote ([tune fret-count]))}, :name cljscale.generator/create-fretboard, :variadic false, :file "src/cljscale/generator.cljs", :end-column 23, :method-params ([tune fret-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tune fret-count]))}, add-root {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 29, :column 7, :end-line 29, :end-column 15, :arglists (quote ([fretboard root]))}, :name cljscale.generator/add-root, :variadic false, :file "src/cljscale/generator.cljs", :end-column 15, :method-params ([fretboard root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fretboard root]))}, find-note {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([note rest]))}, :name cljscale.generator/find-note, :variadic false, :file "src/cljscale/generator.cljs", :end-column 16, :method-params ([note rest]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([note rest]))}, generate-frets {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([res note frets-left]))}, :name cljscale.generator/generate-frets, :variadic false, :file "src/cljscale/generator.cljs", :end-column 21, :method-params ([res note frets-left]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 3, :fn-var true, :arglists (quote ([res note frets-left]))}, create-generator {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 40, :column 7, :end-line 40, :end-column 23, :arglists (quote ([fret-count]))}, :name cljscale.generator/create-generator, :variadic false, :file "src/cljscale/generator.cljs", :end-column 23, :method-params ([fret-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fret-count]))}, foreach-fret {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 5, :column 7, :end-line 5, :end-column 19, :arglists (quote ([f fretboard]))}, :name cljscale.generator/foreach-fret, :variadic false, :file "src/cljscale/generator.cljs", :end-column 19, :method-params ([f fretboard]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f fretboard]))}, find-scale {:protocol-inline nil, :meta {:file "/Users/marius/src/private/my-guitar-kit/src/cljscale/generator.cljs", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([scale root]))}, :name cljscale.generator/find-scale, :variadic false, :file "src/cljscale/generator.cljs", :end-column 17, :method-params ([scale root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scale root]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:in-scale :note :root}, :order [:in-scale :note :root]}, :doc nil}